{
  "service": {
    "service": "customers-segmentation",
    "serviceObject": {
      "name": "customers-segmentation"
    },
    "provider": {
      "stage": "dev",
      "region": "us-east-1",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._'\",\\-\\/\\(\\)]+?)}",
      "name": "aws",
      "runtime": "nodejs8.10",
      "memorySize": 128,
      "timeout": 10,
      "role": "arn:aws:iam::811220501566:role/lambda_basic_vpc_execution",
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          },
          "GetAllLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/customers-segmentation-dev-getAll"
            }
          },
          "GetAllLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/customers-segmentation/dev/1539964322604-2018-10-19T15:52:02.604Z/customers-segmentation.zip"
              },
              "FunctionName": "customers-segmentation-dev-getAll",
              "Handler": "handler.generateReports",
              "MemorySize": 128,
              "Role": "arn:aws:iam::811220501566:role/lambda_basic_vpc_execution",
              "Runtime": "nodejs8.10",
              "Timeout": 10,
              "Environment": {
                "Variables": {
                  "QUERY": 20,
                  "FROM_NUMBER": 0,
                  "TO_NUMBER": 200,
                  "FROM_DATE": "2016-11-03T19:41:08.316Z",
                  "COLLECTIONS_ID": "594157dcd5a84a7e8fc93627_",
                  "DB": "mongodb://10.0.133.218,10.0.158.82,10.0.174.41/modules?replicaSet=rs0"
                }
              },
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-2cfca35e"
                ],
                "SubnetIds": [
                  "subnet-043e9028",
                  "subnet-68640020"
                ]
              }
            },
            "DependsOn": [
              "GetAllLogGroup"
            ]
          },
          "GetAllLambdaVersionf8MdcK8E3Z2RpQDP8bgVWb2aAYIzI8P6xUig2VPeU7A": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetAllLambdaFunction"
              },
              "CodeSha256": "HEfyXTbPBkcdtof/247W56eOmZtvv4N8vDnToezVtxE="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-customers-segmentation",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              }
            }
          },
          "ApiGatewayResourceGeneratereports": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "generateReports",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodGeneratereportsOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                      "method.response.header.Access-Control-Allow-Credentials": "'false'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceGeneratereports"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodGeneratereportsGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceGeneratereports"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetAllLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1539964322637": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodGeneratereportsOptions",
              "ApiGatewayMethodGeneratereportsGet"
            ]
          },
          "GetAllLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetAllLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "GetAllLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetAllLambdaVersionf8MdcK8E3Z2RpQDP8bgVWb2aAYIzI8P6xUig2VPeU7A"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.us-east-1.",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "plugins": [
      "serverless-offline"
    ],
    "pluginsData": {},
    "functions": {
      "getAll": {
        "handler": "handler.generateReports",
        "events": [
          {
            "http": {
              "path": "generateReports",
              "method": "get",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "vpc": {
          "vpcName": "vpc-4c58fb35 (10.0.0.0/16) | VPC-MA",
          "securityGroupIds": [
            "sg-2cfca35e"
          ],
          "subnetIds": [
            "subnet-043e9028",
            "subnet-68640020"
          ]
        },
        "environment": {
          "QUERY": 20,
          "FROM_NUMBER": 0,
          "TO_NUMBER": 200,
          "FROM_DATE": "2016-11-03T19:41:08.316Z",
          "COLLECTIONS_ID": "594157dcd5a84a7e8fc93627_",
          "DB": "mongodb://10.0.133.218,10.0.158.82,10.0.174.41/modules?replicaSet=rs0"
        },
        "name": "customers-segmentation-dev-getAll",
        "package": {},
        "memory": 128,
        "timeout": 10,
        "runtime": "nodejs8.10"
      }
    },
    "artifact": "/home/danny/Workspaces/customers-segmetation/customers-segmetation/.serverless/customers-segmentation.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/customers-segmentation/dev/1539964322604-2018-10-19T15:52:02.604Z",
    "artifact": "customers-segmentation.zip"
  }
}